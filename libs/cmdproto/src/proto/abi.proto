syntax = "proto3";

package abi;

// Command request from client
message CommandRequest {
  oneof request_data {
    //unit lifecycle
    UnitComm ucomm = 1;
    //unit file commands
    UnitFile ufile = 2;
    //job management
    JobComm jcomm = 3;
    //manager commands
    MngrComm mcomm = 4;
    //system commands, reboot/shutdown/halt
    SysComm  syscomm = 5;
  }
}

// Command Response from server
message CommandResponse {
  // stat code; HTTP 2xx/4xx/5xx
  uint32 status = 1;
  // if not 2xxï¼Œmessage include more information
  string message = 2;
}

message UnitComm {
  enum Action {
    STATUS = 0;
    START = 1;
    STOP = 2;
    RESTART = 3;
    RELOAD = 4;
    KILL = 5;
  }
  Action action = 1;
  repeated string units = 2;
}

message UnitFile {
  enum Action {
    CAT = 0;
    ENABLE = 1;
    DISABLE = 2;
    MASK = 3;
    UNMASK = 4;
    GETDEF = 5;
    SETDEF = 6;
  }
  Action action = 1;
  repeated string unitname = 2;
}

message JobComm {
  enum Action {
    LIST = 0;
    CANCEL = 1;
  }
  Action action = 1;
  string JobId = 2;
}

message MngrComm {
  enum Action {
    RELOAD = 0;
    REEXEC = 1;
    LISTUNITS = 2;
  }
  Action action = 1;
}

message SysComm {
  enum Action {
    REBOOT = 0;
    SHUTDOWN = 1;
    HALT = 2;
    SUSPEND = 3;
    POWEROFF = 4;
    HIBERNATE = 5;
  }
  Action action = 1;
  bool force = 2;
}
